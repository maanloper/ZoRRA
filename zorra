#!/bin/bash
set -e

echo; echo "ZoRRA: ZFS on Root | Remote Access"

## Default settings
remote_access_dhcp="dhcp,dhcp6"                             # Set which DHCP versions to use
remote_access_hostname="zbm"                                # Set hostname when booted as ZFS Boot Menu
dropbear_authorized_keys="/etc/dropbear/authorized_keys"    # Location to save dropbear authorized_keys file
zbm_timeout="-1"                                            # Timeout before ZBM boots default OS [zbm.timeout=0 -> zbm.skip, zbm.timeout=-1 -> zbm.show]
refind_timeout="60"                                         # Timeout before rEFInd boots latest ZBM image
refind_theme="https://github.com/maanloper/darkmini.git"    # Default rEFInd theme
refind_theme_config="darkmini/theme-mini.conf"              # Default rEFInd theme config

## Check argument count
if [[ $# -eq 0 ]]; then
	cat <<-EOF
		No parameters set. Options:
		--debootstrap-install
		--setup-remote-access [--recreate-host-keys]
		--add-authorized-key [add:<public_ssh_key> | user:<user>]
		--clear-authorized-keys
		--set-zbm-timeout
		--set-refind-timeout
		--set-refind-theme
		--auto-unlock-pool
	EOF
	exit 1
fi

# Initialize variables
debootstrap_install=false
add_authorized_key=false
clear_authorized_keys=false
ssh_user=""
ssh_authorized_key=""
setup_remote_access=false
recreate_dropbear_host_keys=false
set_zbm_timeout=false
set_refind_timeout=false
set_refind_theme=false
auto_unlock_pool=false
auto_unlock_pool_name=""

## Loop through arguments
while [[ $# -gt 0 ]]; do
	case "$1" in
		--debootstrap-install)
            debootstrap_install=true
		;;
		--setup-remote-access)
			setup_remote_access=true
		;;
		--recreate-host-keys)
			recreate_dropbear_host_keys=true
		;;
		--set-zbm-timeout)
			set_zbm_timeout=true
			if  [[ "${2}" == ^[-]?[0-9]+$ ]]; then
				zbm_timeout="$2"
			else
				echo "Missing/wrong input parameter '${2}' for ${1}"
				exit 1
			fi
			shift
		;;
		--set-refind-timeout)
			set_refind_timeout=true
			if  [[ "${2}" == ^[0-9]+$ ]]; then
				refind_timeout="$2"
			else
				echo "Missing/wrong input parameter '${2}' for ${1}"
				exit 1
			fi
			shift
		;;
		--clear-authorized-keys)
			clear_authorized_keys=true
		;;
		--add-authorized-key)
			add_authorized_key=true
			if [[ "$2" == add:* && "${2#*:}" != "" ]]; then
				ssh_authorized_key="${2#*:}"
			elif [[ "$2" == user:* ]]; then
				ssh_user="${2#*:}"
				if ! id "${ssh_user}" &>/dev/null; then
					echo "User '${ssh_user}' does not exist."
					exit 1
				fi
			else
				echo "Missing/wrong input parameter '${2}' for ${1}"
				exit 1
			fi
			shift
		;;
		--auto-unlock-pool)
			auto_unlock_pool=true
			if  [[ -n "$2" ]] && zpool list -H | grep -q "$2"; then
				auto_unlock_pool_name="$2"
			else
				echo "Missing/wrong input parameter '${2}' for ${1}"
				exit 1
			fi
			shift
		;;
		--set-refind-theme)
			set_refind_theme=true
			if [[ -z "${2}" || "${2}" == --* ]]; then
				## Use defaults
				true
			elif grep -q "git" <<< "${2}" && [[ -n "${3}" && "${3}" != --* ]]; then
				refind_theme="${2}"
				refind_theme_config="${3}"
				shift 2
			elif [[ "${2}" == "none" ]]; then
				refind_theme="none"
				shift 1
			else
				echo "Missing/wrong input parameters '${2}' and '${3}' for ${1}"
				exit 1
			fi
		;;
		*)
			echo "Missing/wrong input parameter '${1}' for ${0}"
			exit 1
		;;
	esac
	shift
done

## Load scripts
source ./zorra_install.sh
source ./zorra_manager.sh